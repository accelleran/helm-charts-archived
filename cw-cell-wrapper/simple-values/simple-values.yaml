global:
  # NATS URL and PORT
  #   Description: Used to configure the application to talk
  #                to NATS
  #   Value type: string
  #
  natsUrl: "10.55.1.2"
  natsPort: "31100"


  # Version of the 5G applications
  #   Description: This is the version of the 5G applications
  #                in DockerHub.
  #   Value type: string
  #
  tag: "0.1.0"


  # Redis settings
  #   Description: Certain application need to be able to reach
  #                Redis. Here we configure the Redis hostname
  #                and port.
  #   Value type: string
  #   Example:
  #
  redisHostname: "10.55.1.2"
  redisPort: "32220"

netconf:
  image:
    tag: "R3.1.1_floreffe"

redis:
  enabled: true

  nameOverride: "redis-cw"

  # Custom labels for the deployment
  customLabels:
    drax/technology: 5g

  # The External IP of where NATS is installed
  natsIp: "{{ .Values.global.natsUrl }}"

  # The port NATS is using, check in the above settings of NATS
  natsPort: "{{ .Values.global.natsPort }}"

  # Backup the redis db when the pod is terminated
  backup:
    # Enabled or disable this feature
    enabled: true
    # Choose after how many days should the backed up DBs be deleted
    deleteAfterDay: 7

  service:
    type: NodePort
    port: 6379
    nodePort: 32220
    name: "redisport"
    serviceName: '{{ include "redis.fullname" . }}'

  persistence:
    accessModes:
      - ReadWriteMany
    enabled: true
    size: 10Gi
    storageClassName: acc-redis-cw
    type: pvc
    ### TESTING
    #hostPath: /opt/pods/acc-redis
    ### Production
    hostPath: /opt/pods/redis-storage-cw

  draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  draxNodeSelector:
    draxName: "{{ .Values.global.draxName }}"

nats:
  enabled: false

  nameOverride: "nats-cw"

  commonLabels:
    drax/technology: 5g

  service:
    serviceName: '{{ include "nats.fullname" . }}'
    type: NodePort
    client:
      nodePort: 31110

  draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  draxNodeSelector:
    draxName: "{{ .Values.global.draxName }}"
