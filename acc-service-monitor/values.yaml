# Default values for acc-service-monitor.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: accelleran/acc-service-monitor
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets:
  - name: accelleran-secret
nameOverride: ""
fullnameOverride: ""

# Namespaces to monitor, comma "," seperated
monitoredNamespaces: "{{ .Release.Namespace }}"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: accservicemonitor

clusterRoleSettings:
  clusterRoleName: arm-acc-service-monitor-clusterrole
  clusterRoleBindingName: arm-acc-service-monitor-clusterrolebinding

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsUser: 0
  runAsNonRoot: true
  runAsUser: 101

service:
  type: NodePort
  port: 80
  nodePort: 30500
  name: "acc-ser-mon"
  serviceName: acc-service-monitor

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

draxNodeSelectorEnabled: "false"

draxNodeSelector:
  draxName: "main"

tolerations: []

affinity: {}

developerMode:
  enabled: false
  sshPassword: password1!
