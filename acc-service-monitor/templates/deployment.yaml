apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "acc-service-monitor.fullname" . }}
  labels:
    {{- include "acc-service-monitor.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "acc-service-monitor.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "acc-service-monitor.labels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "acc-service-monitor.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{ if .Values.developerMode.enabled }}
          image: "{{ .Values.image.repository }}:{{ tpl .Values.image.tag . | default .Chart.AppVersion }}-dev"
          command:
            - sh
            - "-c"
            - |
              /bin/bash <<'EOF'
              sed -i 's/app.run()/app.run(host=os.environ.get("POD_IP"), port={{ .Values.service.port }}, debug=True)/g' /app/main.py
              echo 'PasswordAuthentication yes' >> /etc/ssh/sshd_config
              echo -n '${USER}:{{ .Values.developerMode.sshPassword}}' | chpasswd
              /usr/sbin/sshd
              while true; do sleep 30; done;
              EOF
          {{ else }}
          image: "{{ .Values.image.repository }}:{{ tpl .Values.image.tag . | default .Chart.AppVersion }}"
          {{ end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: MONITORED_NAMESPACES
              value: "{{ tpl .Values.monitoredNamespaces . }}"
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - name: {{ .Values.service.name }}
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{ if not .Values.developerMode.enabled }}
          livenessProbe:
            httpGet:
              path: /services
              port: {{ .Values.service.port }}
          readinessProbe:
            httpGet:
              path: /services
              port: {{ .Values.service.port }}
          {{ end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if or (.Values.nodeSelector) (eq (tpl .Values.draxNodeSelectorEnabled .) "true") }}
      nodeSelector:
        {{ if .Values.nodeSelector }}
          {{- toYaml .Values.nodeSelector | nindent 8 }}
        {{ end }}
        {{ if eq (tpl .Values.draxNodeSelectorEnabled .) "true" }}
          {{- tpl (toYaml .Values.draxNodeSelector) $ | nindent 8 }}
        {{ end }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
