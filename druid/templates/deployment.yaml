apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "druid-chart.fullname" . }}
  labels:
    {{- include "druid-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "druid-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "druid-chart.labels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "druid-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ tpl .Values.version . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          #command: ["/bin/bash","-c"]
          #args: ['ls && "/opt/druid/bin/start-micro-quickstart &" && until curl -f -X POST -H "Content-Type: application/json" -d @supervisor.json http://localhost:8081/druid/indexer/v1/supervisor; do sleep 6; done && until curl -f -X POST -H "Content-Type: application/json" -d @state-supervisor.json http://localhost:8081/druid/indexer/v1/supervisor; do sleep 6; done && /opt/druid/bin/start-micro-quickstart']
          #command: ["/bin/bash","-c"]
          #args: ['while true; do echo starting; sleep 10; done']
          command: 
            - sh
            - "-c"
            - |
              /bin/bash <<'EOF'

              # Normal script content possible here
              #echo "Hello world"
              #ls -l
              # ((until curl -f -X POST -H "Content-Type: application/json" -d @supervisor.json http://localhost:8081/druid/indexer/v1/supervisor; do sleep 6; done) &) && ((until curl -f -X POST -H "Content-Type: application/json" -d @state-supervisor.json http://localhost:8081/druid/indexer/v1/supervisor; do sleep 6; done) &) && (./bin/start-micro-quickstart)
              ./bin/start-micro-quickstart

              EOF
          volumeMounts:
            - name: acc-druid
              mountPath: /opt/druid/var/druid/
              subPath: data/
            - name: acc-druid
              mountPath: /opt/druid/var/sv/
              subPath: logs/
            - name: acc-druid-sv
              mountPath: /opt/druid/supervisor.json
              subPath: "supervisor.json"
            - name: acc-druid-ssv
              mountPath: /opt/druid/state-supervisor.json
              subPath: "state-supervisor.json"
            - name: conf-brok-jvm
              mountPath: /opt/druid/conf/druid/single-server/micro-quickstart/broker/jvm.config 
              subPath: "jvm.config"
            - name: conf-coord-jvm
              mountPath: /opt/druid/conf/druid/single-server/micro-quickstart/coordinator-overlord/jvm.config
              subPath: "jvm.config"
            - name: conf-hist-jvm
              mountPath: /opt/druid/conf/druid/single-server/micro-quickstart/historical/jvm.config
              subPath: "jvm.config"
            - name: conf-rout-jvm
              mountPath: /opt/druid/conf/druid/single-server/micro-quickstart/router/jvm.config
              subPath: "jvm.config"
            - name: conf-midman-prop
              mountPath: /opt/druid/conf/druid/single-server/micro-quickstart/middleManager/runtime.properties
              subPath: "runtime.properties"
            - name: conf-mima-jvm
              mountPath: /opt/druid/conf/druid/single-server/micro-quickstart/middleManager/jvm.config
              subPath: "jvm.config"
            - name: conf-log4j2
              mountPath: /opt/druid/conf/druid/single-server/micro-quickstart/_common/log4j2.xml
              subPath: "log4j2.xml"
            - name: conf-log4j2-task
              mountPath: /opt/druid/conf/druid/single-server/micro-quickstart/_common/log4j2-task.xml
              subPath: "log4j2-task.xml"
          ports:
            - containerPort: {{ .Values.service.port }}
            - containerPort: 8081
            - containerPort: 8082
            - containerPort: 8083
            - containerPort: 8090
            - containerPort: 2181
            - containerPort: 2888
            - containerPort: 3888
          livenessProbe:
            httpGet:
              path: /
              port: 8081
          readinessProbe:
            httpGet:
              path: /
              port: 8081
          lifecycle:
            postStart:
              exec:
                command: 
                  - sh
                  - "-c"
                  - |
                    /bin/bash <<'EOF'

                    now=$(date)

                    echo "[DRUID-STARTUP-SCRIPT] $now"
                    echo "[DRUID-STARTUP-SCRIPT] -- Script started..."

                    read response <<< $(curl -s localhost:8081/druid/indexer/v1/supervisor)
                              
                    if echo "$response" | grep "test2" ; then
                      echo "[DRUID-STARTUP-SCRIPT] test2 OK"
                      until curl -f -XPOST http://localhost:8081/druid/indexer/v1/supervisor/test2/reset ; do sleep 6; done
                    else
                      echo "[DRUID-STARTUP-SCRIPT] test2 BAD"
                      until curl -f -X POST -H "Content-Type: application/json" -d @supervisor.json http://localhost:8081/druid/indexer/v1/supervisor; do sleep 6; done
                      until curl -f -XPOST http://localhost:8081/druid/indexer/v1/supervisor/test2/reset ; do sleep 6; done
                    fi

                    if echo "$response" | grep "state" ; then
                      echo "[DRUID-STARTUP-SCRIPT] state OK"
                      until curl -f -XPOST http://localhost:8081/druid/indexer/v1/supervisor/state/reset ; do sleep 6; done
                    else
                      echo "[DRUID-STARTUP-SCRIPT] state BAD"
                      until curl -f -X POST -H "Content-Type: application/json" -d @state-supervisor.json http://localhost:8081/druid/indexer/v1/supervisor; do sleep 6; done
                      until curl -f -XPOST http://localhost:8081/druid/indexer/v1/supervisor/state/reset ; do sleep 6; done
                    fi

                    echo "[DRUID-STARTUP-SCRIPT] -- Script finished!"

                    EOF
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: acc-druid
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ include "druid-chart.fullname" . }}{{- end }}
          {{- end }}
        - name: acc-druid-sv
          configMap:
            name: acc-druid-sv
        - name: acc-druid-ssv
          configMap:
            name: acc-druid-ssv
        - name: conf-brok-jvm
          configMap:
            name: conf-brok-jvm
        - name: conf-coord-jvm
          configMap:
            name: conf-coord-jvm
        - name: conf-hist-jvm
          configMap:
            name: conf-hist-jvm
        - name: conf-rout-jvm
          configMap:
            name: conf-rout-jvm
        - name: conf-midman-prop
          configMap:
            name: conf-midman-prop
        - name: conf-mima-jvm
          configMap:
            name: conf-mima-jvm
        - name: conf-log4j2
          configMap:
            name: conf-log4j2
        - name: conf-log4j2-task
          configMap:
            name: conf-log4j2-task
