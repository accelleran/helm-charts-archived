global:
  # Kubernetes advertise IP, external address used by services
  kubeIp: "52.47.149.39"

  # dRAX Specific Node Selector
  #   Description: This is a special nodeSelector field implemented for the
  #                Accelleran RIC Helm charts. You need to first label your
  #                node in Kubernetes with a label "draxName" and give it a
  #                <value>. For example for node <node_name>, you can use the
  #                following command to label it:
  #                kubectl label node <node_name> draxName=<value>.
  #                You can then enabled this feature by setting
  #                "draxNodeSelectorEnabled" to "true" (as a string with quotes!).
  #                The in "draxName" set the value of the label you chose for
  #                the node. This will in effect install all the RIC Application
  #                on that node, without the need to edit all individual helm
  #                charts. In case you want to add other nodeSelector options,
  #                you have to add them to the helm chart specific values files.
  #   Value type: string
  #   Example:
  #
  draxNodeSelectorEnabled: "true"
  draxName: "arm1"

kafka:
  enabled: true

  draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  draxNodeSelector:
    draxName: "cloud1"
  
  configurationOverrides:
    # AUTOGENERATED DONT EDIT
    "confluent.support.metrics.enable": false  # Disables confluent metric submission
    "auto.create.topics.enable": true

    ## IMPORTANT Please manually change here the 10.20.20.20 IP to be the same as the global.kubeIp value
    "advertised.listeners": |-
      EXTERNAL://10.8.0.1:$((31090 + ${KAFKA_BROKER_ID}))
  
    # AUTOGENERATED DONT EDIT
    "listener.security.protocol.map": |-
      PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT

  zookeeper:
    draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
    draxNodeSelector:
      draxName: "cloud1"


nkafka-helm:
  draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  draxNodeSelector:
    draxName: "cloud1"

  # AUTOGENERATED DONT EDIT
  kafkaUrl: "{{ .Release.Name }}-kafka.{{ .Release.Namespace }}:9092"

  # AUTOGENERATED DONT EDIT
  natsUrl: "nats://nats-service.{{ .Release.Namespace }}:4222"

  # AUTOGENERATED DONT EDIT
  initConfigs:
    natsService: "nats-service.{{ .Release.Namespace }}:4222"
    kafkaService: "{{ .Release.Name }}-kafka.{{ .Release.Namespace }}:9092"

acc-sys-dashboard:
  grafana:
    draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
    draxNodeSelector:
      draxName: "{{ .Values.global.draxName }}"

    datasources:
      # AUTOGENERATED DONT EDIT
      prometheusUrl: http://{{ .Release.Name }}-prometheus-server.{{ .Release.Namespace }}:80

      # AUTOGENERATED DONT EDIT
      lokiUrl: http://{{ .Release.Name }}-loki.{{ .Release.Namespace }}:3100

  prometheus:
    alertmanager:
      draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
      draxNodeSelector:
        draxName: "{{ .Values.global.draxName }}"
    kubeStateMetrics:
      draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
      draxNodeSelector:
        draxName: "{{ .Values.global.draxName }}"
    nodeExporter:
      draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
      draxNodeSelector:
        draxName: "{{ .Values.global.draxName }}"
    pushgateway:
      draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
      draxNodeSelector:
        draxName: "{{ .Values.global.draxName }}"
    server:
      draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
      draxNodeSelector:
        draxName: "{{ .Values.global.draxName }}"

      # Retention policy on the Prometheus storage
      retention: 15d

  kube-eagle:
    draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
    draxNodeSelector:
      draxName: "{{ .Values.global.draxName }}"

  metrics-server:
    image:
      architecture: arm64

    draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
    draxNodeSelector:
      draxName: "{{ .Values.global.draxName }}"

loki-stack:
  fluent-bit:
    draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
    draxNodeSelector:
      draxName: "cloud1"

    loki:
      # AUTOGENERATED DONT EDIT
      serviceName: "{{ .Release.Name }}-loki.{{ .Release.Namespace }}"  # Defaults to "${RELEASE}-loki" if not set
  loki:
    draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
    draxNodeSelector:
      draxName: "{{ .Values.global.draxName }}"

    config:
      table_manager:
        # Retention polocy for logs in Loki
        retention_deletes_enabled: true
        # Must be a multiple of 168h
        retention_period: 672h

dash-front-back-end:
  draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  draxNodeSelector:
    draxName: "{{ .Values.global.draxName }}"

  service:
    # The internal port used by WebGUI, default is 5000
    port: 5000

    # The external nodePort used by the WebGUI, default is 31315
    nodePort: 31315

  initConfigs:
    kafkaService: "{{ .Release.Name }}-kafka.{{ .Release.Namespace }}:9092"

  config:
    # AUTOGENERATED DONT EDIT
    config_id: "production"

    # The namespace where the L3 pod will be running
    defaultServiceNamespace: "default"

    # The namespace where the ORAN-CLUSTERCONTROLLER will be running
    defaultOranNamespace: "default"

    # AUTOGENERATED DONT EDIT
    grafanaURL: "{{ .Values.global.kubeIp }}"

    # The external nodePort used by Grafana, default is 30300
    grafanaPort: "30300"

    # AUTOGENERATED DONT EDIT
    nodeApiURL: "{{ .Values.global.kubeIp }}"

    nodePort: "31315"
    kafkaUrl: "{{ .Values.global.kubeIp }}"
    kafkaPort: "31090"
    svcOrchestratorHost: "acc-service-orchestrator"
    svcOrchestratorPort: "80"
    svcMonitorHost: "acc-service-monitor"
    svcMonitorPort: "80"
    pcixAppPodName: "accelleran-drax-pci-010-pci-xapp-api"
    pcixAppPort: "80"
    ksqldbPodName: "{{ .Values.global.kubeIp }}"
    ksqldbPort: "30533"
    LteRadioControllerLabel: "4G-Radio-Controller"
    apiUrl: "{{ .Values.global.kubeIp }}"
    websocketPort: "31316"

acc-service-monitor:
  # Enable/disable installation of the Service Monitor
  enabled: true

  draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  draxNodeSelector:
    draxName: "{{ .Values.global.draxName }}"

  monitoredNamespaces: "{{ .Release.Namespace }}"

acc-service-orchestrator:
  # Enable/disable installation of the Service Orchestrator
  enabled: true

  draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  draxNodeSelector:
    draxName: "{{ .Values.global.draxName }}"

acc-state-db:
  # Enable/disable installation of the State DB
  enabled: true

  draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  draxNodeSelector:
    draxName: "{{ .Values.global.draxName }}"

  strategyType: Recreate

  xapp-redis:
    nameOverride: "acc-state-db-redis"
    # AUTOGENERATED DONT EDIT
    enabled: true

    draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
    draxNodeSelector:
      draxName: "{{ .Values.global.draxName }}"

  xapp-api:
    nameOverride: "acc-state-db-api"
    # AUTOGENERATED DONT EDIT
    enabled: true
    redis:
      # AUTOGENERATED DONT EDIT
      url: "{{ .Release.Name }}-acc-state-db-redis.{{ .Release.Namespace }}"

    draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
    draxNodeSelector:
      draxName: "{{ .Values.global.draxName }}"

  # AUTOGENERATED DONT EDIT
  initConfigs:
    kafkaService: "{{ .Release.Name }}-kafka.{{ .Release.Namespace }}:9092"

  xappFrameworkConfig:
    redisUrl: "{{ .Release.Name }}-acc-state-db-redis.{{ .Release.Namespace }}"
    redisPort: 6379
    # If you want to flush the existing config, and use the config on helm install, enable the following
    flushOnDeployment: false

  xappConfig:
    apiGatewayUrl: '{{ .Values.global.kubeIp }}'
    apiGatewayPort: 31315
    logLevel: 20  # CRITICAL=50, ERROR=40, WARNING=30, INFO=20, DEBUG=10, NOTSET=0
    stateDbUrl: '{{ .Values.global.kubeIp }}'
    stateDbPort: 32000
    kafkaStateTopic: 'Topic_State'
    kafkaBeaconTopic: 'test2'
    kafkaUrl: '{{ .Values.global.kubeIp }}'
    kafkaPort: 31090
    expire_timer: 5000000000
    periodicPublish: 'True'
    publishInterval: 2  # in seconds

influxdb:
  # Enable/disable installation of InfluxDB
  enabled: true

  draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  draxNodeSelector:
    draxName: "{{ .Values.global.draxName }}"

vector:
  # Enable/disable installation of Vector 
  enabled: true

  draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  draxNodeSelector:
    draxName: "{{ .Values.global.draxName }}"

  initConfigs:
    kafkaService: "{{ .Release.Name }}-kafka.{{ .Release.Namespace }}:9092"
    influxdbService: "{{ .Release.Name }}-influxdb-api.{{ .Release.Namespace }}:8086"

  config:
    kafka:
      hostname: "{{ .Values.global.kubeIp }}"
      port: 31090
    influx:
      hostname: "{{ .Values.global.kubeIp }}"
      port: 30303

vectorfiveg:
  enabled: true

  draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  draxNodeSelector:
    draxName: "{{ .Values.global.draxName }}"

  config:
    influx:
      database: db_5G
      hostname: "{{ .Values.global.kubeIp }}"
      namespace: default
      password: password
      port: 30303
      type: influxdb_metrics
      username: admin
    kafka:
      hostname: "{{ .Values.global.kubeIp }}"
      port: 31090
      topic: 5gmessages

  initConfigs:
    kafkaService: "{{ .Release.Name }}-kafka.{{ .Release.Namespace }}:9092"
    influxdbService: "{{ .Release.Name }}-influxdb-api.{{ .Release.Namespace }}:8086"



