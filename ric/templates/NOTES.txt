###############################################

###############################################
# Accelleran dRAX RIC                         #
###############################################

# Release Notes ###############################

## RIC 6.2.0-rc.1
### Added
  - Added DU/RU section to Dashboard
  - Added DU/RU endpoints to RIC API
  - Added Network State Monitor microservice
  - Added Config API microservice
  - Added support for forwarding Cell Wrapper messages to Kafka

### Changed
  - Changed the System Health page to display Kubernetes resources
  - Changed the CU-CP configuration Dashboard page to remove "operator" table

### Fixed
  - Fixed CUs being deployed with NATS/Redis IPs rather than Kubernetes Service names
  - Fixed 5G System Dashboard not showing correct Pod counts
  - Fixed CU RRC Connection counters with Emergency Cause not being counted

# Services #####################################
{{ if index .Values "acc-kafka" "enabled" }}## Kafka
{{ .Values.global.kubeIp }}:{{ index .Values "acc-kafka" "service" "nodePort" }} {{ end }}

{{ if index .Values "acc-service-monitor" "enabled" }}## Service Monitor
{{ .Values.global.kubeIp }}:{{ index .Values "acc-service-monitor" "service" "nodePort" }} {{ end }}

{{ if index .Values "dash-front-back-end" "enabled" }}## dRAX Dashboard
{{ .Values.global.kubeIp }}:{{ index .Values "dash-front-back-end" "service" "nodePort" }} {{ end }}

{{ if index .Values "acc-sys-dashboard" "enabled" }}## Grafana
{{ .Values.global.kubeIp }}:{{ index .Values "acc-sys-dashboard" "grafana" "service" "nodePort" }} {{ end }}

{{ if .Values.global.enable4G }}### Accelleran 4G Infrastcuture ###
{{ if index .Values "acc-4g-infrastructure" "acc-l2-update" "enabled" }}## E1000 Layer 2 Update Server
{{ .Values.global.kubeIp }}:{{ index .Values "acc-4g-infrastructure" "acc-l2-update" "service" "nodePort" }} {{ end }}

{{ if index .Values "acc-4g-infrastructure" "provisioner" "enabled" }}## 4G dRAX Provisioner
{{ .Values.global.kubeIp }}:{{ index .Values "acc-4g-infrastructure" "provisioner" "nginx" "service" "nodePort" }}{{ end }}{{- end -}}

{{ if index .Values "keycloak-ingress" "ingress-nginx" "controller" "service" "nodePorts" "http" }}## Ingress URL
{{ .Values.global.kubeIp }}:{{ index .Values "keycloak-ingress" "ingress-nginx" "controller" "service" "nodePorts" "http" }}{{ end }}

To get the Keycloak Admin password, run:
echo $(kubectl get secret {{ .Release.Name }}-keycloak-secret -o jsonpath="{.data.KEYCLOAK_PASSWORD}" | base64 --decode)

###############################################
