apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "accelleran-xapp-statedb.fullname" . }}
  labels:
    {{- include "accelleran-xapp-statedb.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: {{ .Values.strategyType }}
  selector:
    matchLabels:
      {{- include "accelleran-xapp-statedb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "accelleran-xapp-statedb.labels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "accelleran-xapp-statedb.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ .Chart.Name }}-check-redis
          image: "{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}"
          imagePullPolicy: {{ .Values.initImage.pullPolicy }}
          command: ['sh', '-c', 'until [ "$(redis-cli -h {{ tpl .Values.xappFrameworkConfig.redisUrl . }} ping)" == "PONG" ]; do echo $(date) [CHECK-SERVICES] Waiting for StateDB REDIS; sleep 2; done; echo Redis online']
        - name: {{ .Chart.Name }}-check-drax-redis
          image: "{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}"
          imagePullPolicy: {{ .Values.initImage.pullPolicy }}
          command: [ 'sh', '-c', 'until [ "$(redis-cli -h {{ tpl .Values.xappConfig.stateDbUrl . }} -p {{ .Values.xappConfig.stateDbPort }} ping)" == "PONG" ]; do echo $(date) [CHECK-SERVICES] Waiting for dRAX REDIS; sleep 2; done; echo Redis online' ]
        {{ if .Values.xappFrameworkConfig.flushOnDeployment }}
        - name: {{ .Chart.Name }}-flush-redis
          image: "{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}"
          imagePullPolicy: {{ .Values.initImage.pullPolicy }}
          command: ['sh', '-c', 'redis-cli -h {{ tpl .Values.xappFrameworkConfig.redisUrl . }} FLUSHALL']
        {{ end }}
        - name: {{ .Chart.Name }}-check-kafka
          image: "{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}"
          imagePullPolicy: {{ .Values.initImage.pullPolicy }}
          command: ['sh', '-c', 'echo "KAFKA_URL=\"{{ tpl .Values.initConfig.kafkaUrl . }}\"" > kafka_url.py && python3 kafka-test.py {{ tpl .Values.initConfig.kafkaTopicsCheck . }}']
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{ if eq (tpl .Values.accelleranLicense.enabled .) "true" }}
          image: "{{ .Values.image.repository }}-license:{{ tpl .Values.version . }}"
          {{ else }}
          image: "{{ .Values.image.repository }}:{{ tpl .Values.version . }}"
          {{ end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: {{ include "accelleran-xapp-statedb.fullname" . }}-config
              mountPath: /src/xapp/xapp_configuration.json
              subPath: "xapp_configuration.json"
            {{ if eq (tpl .Values.accelleranLicense.enabled .) "true" }}
            - mountPath: "/etc/license/license.crt"
              subPath: "license.crt"
              name: accelleran-license
              readOnly: true
            {{ end }}
          ports:
            - containerPort: {{ .Values.service.port }}
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if or (.Values.nodeSelector) (eq (tpl .Values.draxNodeSelectorEnabled .) "true") }}
      nodeSelector:
        {{ if .Values.nodeSelector }}
          {{- toYaml .Values.nodeSelector | nindent 8 }}
        {{ end }}
        {{ if eq (tpl .Values.draxNodeSelectorEnabled .) "true" }}
          {{- tpl (toYaml .Values.draxNodeSelector) $ | nindent 8 }}
        {{ end }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        {{ if eq (tpl .Values.accelleranLicense.enabled .) "true" }}
        - name: accelleran-license
          secret:
            secretName: {{ tpl .Values.accelleranLicense.licenseSecretName . }}
        {{ end }}
        - name: {{ include "accelleran-xapp-statedb.fullname" . }}-config
          configMap:
            name: {{ include "accelleran-xapp-statedb.fullname" . }}-config
