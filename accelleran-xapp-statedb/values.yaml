# Default values for accelleran-xapp-statedb.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

### Global variable indicating the dRAX machine IP
global:
  kubeIp: "10.20.20.20"


### The xApp Framework elements values
# This is the xApp Redis DB
xapp-redis:
  nameOverride: "acc-state-db-redis"
  # AUTOGENERATED DONT EDIT
  enabled: true

  draxNodeSelectorEnabled: "false"

  draxNodeSelector:
    draxName: "main"

# This is the xApp API
xapp-api:
  nameOverride: "acc-state-db-api"
  # AUTOGENERATED DONT EDIT
  enabled: true
  redis:
    # AUTOGENERATED DONT EDIT
    url: "{{ .Release.Name }}-xapp-redis.{{ .Release.Namespace }}"

  draxNodeSelectorEnabled: "false"

  draxNodeSelector:
    draxName: "main"


### The xApp Core values
replicaCount: 1

strategyType: Recreate

# Version of the xApp Core to use
version: "{{ .Chart.AppVersion }}"

# Image settings for the xApp Core
image:
  repository: accelleran/acc-state-db
  pullPolicy: IfNotPresent

initImage:
  repository: accelleran/acc-generic-img
  pullPolicy: IfNotPresent
  tag: "0.5.1"

initConfig:
  kafkaUrl: "{{ .Release.Name }}-acc-kafka.{{ .Release.Namespace }}:9092"

imagePullSecrets:
  - name: accelleran-secret
nameOverride: ""
fullnameOverride: ""

xappFrameworkConfig:
  name: "state-monitor"
  description: "This xApp provides the state of the cells"
  redisUrl: "{{ .Release.Name }}-xapp-redis.{{ .Release.Namespace }}"
  redisPort: 6379
  # If you want to flush the existing config, and use the config on helm install, enable the following
  flushOnDeployment: false

xappConfig:
  apiGatewayUrl: '{{ .Values.global.kubeIp }}'
  apiGatewayPort: 30315
  logLevel: 20  # CRITICAL=50, ERROR=40, WARNING=30, INFO=20, DEBUG=10, NOTSET=0
  stateDbUrl: '{{ .Values.global.kubeIp }}'
  stateDbPort: 32000
  kafkaStateTopic: 'accelleran.drax.4g.ric.raw.network_state'
  kafkaBeaconTopic: 'accelleran.drax.4g.ric.raw.service_discovery'
  kafkaUeMeasTopic: 'accelleran.drax.4g.ric.raw.ue_measurements'
  kafkaUrl: '{{ .Values.global.kubeIp }}'
  kafkaPort: 31090
  expire_timer: 5000000000
  periodicPublish: 'True'
  publishInterval: 2  # in seconds

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: 
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  runAsUser: 0

service:
  enabled: true
  type: NodePort
  port: 80
  nodePort: 30503

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

draxNodeSelectorEnabled: "false"

draxNodeSelector:
  draxName: "main"

tolerations: []

affinity: {}
