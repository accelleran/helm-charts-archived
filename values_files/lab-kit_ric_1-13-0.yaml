global:
  # Kubernetes advertise IP, external address used by services
  kubeIp: "10.55.1.2"

  # dRAX Specific Node Selector
  #   Description: This is a special nodeSelector field implemented for the
  #                Accelleran RIC Helm charts. You need to first label your
  #                node in Kubernetes with a label "draxName" and give it a
  #                <value>. For example for node <node_name>, you can use the
  #                following command to label it:
  #                kubectl label node <node_name> draxName=<value>.
  #                You can then enabled this feature by setting
  #                "draxNodeSelectorEnabled" to "true" (as a string with quotes!).
  #                The in "draxName" set the value of the label you chose for
  #                the node. This will in effect install all the RIC Application
  #                on that node, without the need to edit all individual helm
  #                charts. In case you want to add other nodeSelector options,
  #                you have to add them to the helm chart specific values files.
  #   Value type: string
  #   Example:
  #
  draxNodeSelectorEnabled: "false"
  draxName: "main"

  # 4G/5G Options
  enable4G: true
  enable5G: true

acc-kafka:
  enabled: true
  env:
    KAFKA_ADVERTISED_PORT: "31090"
    KAFKA_ADVERTISED_HOST_NAME: "{{ .Values.global.kubeIp }}"
    KAFKA_ZOOKEEPER_CONNECT: "{{ .Release.Name }}-zookeeper.{{ .Release.Namespace }}:2181"
    KAFKA_BROKER_ID: "0"
    KAFKA_CREATE_TOPICS: "accelleran.drax.4g.ric.raw.network_state:1:1,accelleran.drax.4g.ric.raw.messages:1:1,accelleran.drax.4g.ric.raw.service_discovery:1:1,accelleran.drax.4g.ric.raw.ue_measurements:1:1,accelleran.drax.5g.ric.raw.cu_state:1:1,accelleran.drax.5g.ric.raw.ue_measurements:1:1,accelleran.drax.5g.ric.raw.pm_counters:1:1,accelleran.drax.5g.ric.raw.messages:1:1"
    KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    JMX_PORT: "9010"

  draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  draxNodeSelector:
    draxName: "{{ .Values.global.draxName }}"

  zookeeper:
    enabled: true

    draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
    draxNodeSelector:
      draxName: "{{ .Values.global.draxName }}"

acc-kminion:
  enabled: true

  initConfig:
    kafkaUrl: "{{ .Release.Name }}-acc-kafka.{{ .Release.Namespace }}:9092"
    kafkaTopicsCheck: "accelleran.drax.4g.ric.raw.messages,accelleran.drax.4g.ric.raw.service_discovery,accelleran.drax.4g.ric.raw.ue_measurements,accelleran.drax.5g.ric.raw.cu_state,accelleran.drax.5g.ric.raw.ue_measurements,accelleran.drax.5g.ric.raw.pm_counters,accelleran.drax.5g.ric.raw.messages"

  kafka:
    brokers: "{{ .Release.Name }}-acc-kafka.{{ .Release.Namespace }}:9092"

  draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  draxNodeSelector:
    draxName: "{{ .Values.global.draxName }}"

nkafka-4g:
  draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  draxNodeSelector:
    draxName: "{{ .Values.global.draxName }}"

  accelleranLicense:
    enabled: false
    licenseSecretName: accelleran-license

  # AUTOGENERATED DONT EDIT
  kafkaUrl: "{{ .Release.Name }}-acc-kafka.{{ .Release.Namespace }}:9092"

  # AUTOGENERATED DONT EDIT
  natsUrl: "nats-service.{{ .Release.Namespace }}:4222"

  configs:
    # If set to false, will use the ueRicId. If set to true, will use the generic UE ID shown on teh dashboard. WARNING: if using generic UE ID, you will not have the ueRicId which is necessary for some dRAX commands.
    genericUeId: "false"
    # How vectors will be published to JSON Kafka messages. Default set to none.
    seqMapper: "none"
    # The log level can be commented out, or set to info or debug
    logLevel: info
    ueRicIdName: "ueRicId"
    ueDraxIdName: "ueDraxId"


acc-sys-dashboard:
  grafana:
    draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
    draxNodeSelector:
      draxName: "{{ .Values.global.draxName }}"

    datasources:
      # AUTOGENERATED DONT EDIT
      prometheusUrl: http://{{ .Release.Name }}-prometheus-server.{{ .Release.Namespace }}:80

      # AUTOGENERATED DONT EDIT
      lokiUrl: http://{{ .Release.Name }}-loki.{{ .Release.Namespace }}:3100

      # AUTOGENERATED DONT EDIT
      influxdbUrl: http://{{ .Release.Name }}-influxdb-api.{{ .Release.Namespace }}:8086

  prometheus:
    alertmanager:
      draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
      draxNodeSelector:
        draxName: "{{ .Values.global.draxName }}"
    kubeStateMetrics:
      draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
      draxNodeSelector:
        draxName: "{{ .Values.global.draxName }}"
    pushgateway:
      draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
      draxNodeSelector:
        draxName: "{{ .Values.global.draxName }}"
    server:
      draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
      draxNodeSelector:
        draxName: "{{ .Values.global.draxName }}"

      # Retention policy on the Prometheus storage
      retention: 15d

    extraScrapeConfigs: |
      - job_name: 5gPmCountersXapp
        static_configs:
          - targets:
            - "{{ .Values.global.kubeIp }}:30515"
      - job_name: kafkaMonitoringJmx
        static_configs:
          - targets:
            - "{{ .Release.Name }}-acc-kafka.{{ .Release.Namespace }}:5556"
      - job_name: kafkaMonitoringKminion
        static_configs:
          - targets:
            - "ric-acc-kminion:8080"

  kube-eagle:
    draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
    draxNodeSelector:
      draxName: "{{ .Values.global.draxName }}"

  metrics-server:
    draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
    draxNodeSelector:
      draxName: "{{ .Values.global.draxName }}"



loki-stack:
  fluent-bit:
    loki:
      # AUTOGENERATED DONT EDIT
      serviceName: "{{ .Release.Name }}-loki.{{ .Release.Namespace }}"  # Defaults to "${RELEASE}-loki" if not set
  loki:
    draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
    draxNodeSelector:
      draxName: "{{ .Values.global.draxName }}"

    config:
      table_manager:
        # Retention polocy for logs in Loki
        retention_deletes_enabled: true
        # Must be a multiple of 168h
        retention_period: 672h

dash-front-back-end:
  draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  draxNodeSelector:
    draxName: "{{ .Values.global.draxName }}"

  service:
    # The internal port used by WebGUI, default is 5000
    port: 5000

    # The external nodePort used by the WebGUI, default is 31315
    nodePort: 31315

  initConfig:
    kafkaUrl: "{{ .Release.Name }}-acc-kafka.{{ .Release.Namespace }}:9092"

  config:
    # AUTOGENERATED DONT EDIT
    config_id: "production"

    # The namespace where the L3 pod will be running
    defaultServiceNamespace: "default"

    # The namespace where the ORAN-CLUSTERCONTROLLER will be running
    defaultOranNamespace: "default"

    # AUTOGENERATED DONT EDIT
    grafanaURL: "{{ .Values.global.kubeIp }}"

    # The external nodePort used by Grafana, default is 30300
    grafanaPort: "30300"

    # AUTOGENERATED DONT EDIT
    nodeApiURL: "{{ .Values.global.kubeIp }}"

    nodePort: "31315"
    kafkaUrl: "{{ .Values.global.kubeIp }}"
    kafkaPort: "31090"
    svcOrchestratorHost: "acc-service-orchestrator"
    svcOrchestratorPort: "80"
    svcMonitorHost: "acc-service-monitor"
    svcMonitorPort: "80"
    pcixAppPodName: "accelleran-drax-pci-010-pci-xapp-api"
    pcixAppPort: "80"
    ksqldbPodName: "{{ .Values.global.kubeIp }}"
    ksqldbPort: "30533"
    LteRadioControllerLabel: "4G-Radio-Controller"

    # The IP that is set here must be globally available so that any browser can reach it, so that the front end can communicate to the backend. Preferable, use the publicly exposed IP that can reach the Kubernetes Advertise IP. If only a private Kubernetes Advertise IP is set here, the dRAX Dashbaord will only work when openning a browser on a computer that can reach the private Kuebrnetes Advertise IP.
    apiUrl: "{{ .Values.global.kubeIp }}"
    websocketPort: "31316"
    topologyExpired: 5000
    kafkaTopics:
      - "accelleran.drax.5g.ric.raw.cu_state"
      - "accelleran.drax.5g.ric.raw.ue_measurements"
      - "accelleran.drax.4g.ric.raw.network_state"
      - "accelleran.drax.all.ric.processed.anr"

acc-service-monitor:
  # Enable/disable installation of the Service Monitor
  enabled: true

  draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  draxNodeSelector:
    draxName: "{{ .Values.global.draxName }}"

  monitoredNamespaces: "{{ .Release.Namespace }}"

acc-service-orchestrator:
  # Enable/disable installation of the Service Orchestrator
  enabled: true

  draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  draxNodeSelector:
    draxName: "{{ .Values.global.draxName }}"

acc-state-db:
  # Enable/disable installation of the State DB
  enabled: true

  draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  draxNodeSelector:
    draxName: "{{ .Values.global.draxName }}"

  strategyType: Recreate

  xapp-redis:
    nameOverride: "acc-state-db-redis"
    # AUTOGENERATED DONT EDIT
    enabled: true

    draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
    draxNodeSelector:
      draxName: "{{ .Values.global.draxName }}"

  xapp-api:
    nameOverride: "acc-state-db-api"
    # AUTOGENERATED DONT EDIT
    enabled: true
    redis:
      # AUTOGENERATED DONT EDIT
      url: "{{ .Release.Name }}-acc-state-db-redis.{{ .Release.Namespace }}"

    draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
    draxNodeSelector:
      draxName: "{{ .Values.global.draxName }}"

  # AUTOGENERATED DONT EDIT
  initConfig:
    kafkaUrl: "{{ .Release.Name }}-acc-kafka.{{ .Release.Namespace }}:9092"
    kafkaTopicsCheck: "accelleran.drax.4g.ric.raw.messages,accelleran.drax.4g.ric.raw.service_discovery,accelleran.drax.4g.ric.raw.ue_measurements,accelleran.drax.5g.ric.raw.cu_state,accelleran.drax.5g.ric.raw.ue_measurements,accelleran.drax.5g.ric.raw.pm_counters,accelleran.drax.5g.ric.raw.messages"

  xappFrameworkConfig:
    redisUrl: "{{ .Release.Name }}-acc-state-db-redis.{{ .Release.Namespace }}"
    redisPort: 6379
    # If you want to flush the existing config, and use the config on helm install, enable the following
    flushOnDeployment: false

  xappConfig:
    apiGatewayUrl: '{{ .Values.global.kubeIp }}'
    apiGatewayPort: 31315
    logLevel: 20  # CRITICAL=50, ERROR=40, WARNING=30, INFO=20, DEBUG=10, NOTSET=0
    stateDbUrl: '{{ .Values.global.kubeIp }}'
    stateDbPort: 32000
    kafkaStateTopic: 'accelleran.drax.4g.ric.raw.network_state'
    kafkaBeaconTopic: 'accelleran.drax.4g.ric.raw.service_discovery'
    kafkaUeMeasTopic: 'accelleran.drax.4g.ric.raw.ue_measurements'
    kafkaUrl: '{{ .Values.global.kubeIp }}'
    kafkaPort: 31090
    expire_timer: 5000000000
    periodicPublish: true
    publishInterval: 2  # in seconds

influxdb:
  # Enable/disable installation of InfluxDB
  enabled: true

  draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  draxNodeSelector:
    draxName: "{{ .Values.global.draxName }}"

vector:
  # Enable/disable installation of Vector 
  enabled: true

  draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  draxNodeSelector:
    draxName: "{{ .Values.global.draxName }}"

  initConfig:
    kafkaUrl: "{{ .Release.Name }}-acc-kafka.{{ .Release.Namespace }}:9092"
    influxdbService: "{{ .Release.Name }}-influxdb-api.{{ .Release.Namespace }}:8086"

  config:
    kafka:
      hostname: "{{ .Values.global.kubeIp }}"
      port: 31090
    influx:
      hostname: "{{ .Values.global.kubeIp }}"
      port: 30303

vectorfiveg:
  enabled: true

  draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  draxNodeSelector:
    draxName: "{{ .Values.global.draxName }}"

  config:
    influx:
      database: db_5G
      hostname: "{{ .Values.global.kubeIp }}"
      namespace: uemeasurement
      password: password
      port: 30303
      type: influxdb_logs
      username: admin
    kafka:
      hostname: "{{ .Values.global.kubeIp }}"
      port: 31090
      topic: accelleran.drax.5g.ric.raw.ue_measurements

  initConfig:
    kafkaUrl: "{{ .Release.Name }}-acc-kafka.{{ .Release.Namespace }}:9092"
    influxdbService: "{{ .Release.Name }}-influxdb-api.{{ .Release.Namespace }}:8086"

acc-fiveg-pmcounters:
  enabled: true

  draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  draxNodeSelector:
    draxName: "{{ .Values.global.draxName }}"

  strategyType: Recreate

  # AUTOGENERATED DONT EDIT
  initConfig:
    kafkaUrl: "{{ .Release.Name }}-acc-kafka.{{ .Release.Namespace }}:9092"
    kafkaTopicsCheck: "accelleran.drax.4g.ric.raw.messages,accelleran.drax.4g.ric.raw.service_discovery,accelleran.drax.4g.ric.raw.ue_measurements,accelleran.drax.5g.ric.raw.cu_state,accelleran.drax.5g.ric.raw.ue_measurements,accelleran.drax.5g.ric.raw.pm_counters,accelleran.drax.5g.ric.raw.messages"

  draxConfig:
    - name: 'KAFKA_URL'
      type: string
      value: '{{ .Values.global.kubeIp }}'
    - name: 'KAFKA_PORT'
      type: string
      value: '31090'

  xappConfig:
    - name: 'LOG_LEVEL'
      type: int
      value: 20
    - name: 'PM_COUNTER_TOPIC'
      type: string
      value: 'accelleran.drax.5g.ric.raw.pm_counters'
    - name: 'PROCESSED_PM_COUNTER_TOPIC'
      type: string
      value: 'accelleran.drax.5g.ric.processed.pm_counters'
    - name: 'split_message'
      type: string
      value: 'True'
    - name: 'publish_original_message'
      type: string
      value: 'True'

acc-5g-infrastructure:
  nats:
    enabled: true

    nameOverride: "infrastructure-5g-nats"

    service:
      serviceName: '{{ include "nats.fullname" . }}'
      client:
        name: "natsport"
        port: 4222
#        nodePort:
      cluster:
        name: "clusterport"
        port: 6222
#        nodePort:
      monitoring:
        name: "consoleport"
        port: 8222
#        nodePort:

    draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
    draxNodeSelector:
      draxName: "{{ .Values.global.draxName }}"

  redis:
    enabled: true

    nameOverride: "infrastructure-5g-redis"

    draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
    draxNodeSelector:
      draxName: "{{ .Values.global.draxName }}"

    # Backup the redis db when the pod is terminated
    backup:
      # Enabled or disable this feature
      enabled: true
      # Choose after how many days should the backed up DBs be deleted
      deleteAfterDay: 7

    service:
      type: NodePort
      port: 6379
#      nodePort:
      name: "redisport"
      serviceName: '{{ include "redis.fullname" . }}'

    persistence:
      accessModes:
        - ReadWriteMany
      enabled: true
      size: 10Gi
      storageClassName: acc-redis-5g
      type: pvc
      hostPath: /opt/pods/5g-redis-storage

  metallb:
    # This installs the MetalLB LoadBalancer. Please make sure to do the required preparation before enabling the installation:
    # https://metallb.universe.tf/installation/
    # If you have your own Load Balancer in Kubernetes, you can skip this installation - set it to false.
    enabled: false

  # Autoconfigure the MetalLB, give a range of IPs which the load balancer can give out
    configInline:
      address-pools:
        - name: default
          protocol: layer2
          addresses:
            - 10.55.1.20-10.55.1.60
