# Default values for provisioner-dhcp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

version: "{{ .Chart.AppVersion }}"

image:
  repository: accelleran/provisioner-dhcp
  pullPolicy: IfNotPresent

imagePullSecrets:
  - name: accelleran-secret
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The nme: ame of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  runAsUser: 0

hostNetwork: true

service:
  type: ClusterIP
  port: 15999
  enabled: false

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

persistence:
  accessModes: 
    - ReadwriteMany
  enabled: false
  size: 1Gi
  storageClassName: acc-prov-dhcp
  type: pvc
  hostPath: /opt/pods/

configuration:
  interface: eno1
  provisionerIp: 10.20.20.20
  provisionerPort: 31610
  # If you enable staticRoute, then provide the network and gateway values
  staticRoute: false
  staticRouteNetwork: 10.20.20.0/24
  staticRouteGateway: 10.22.10.52
    

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

draxNodeSelectorEnabled: "false"

draxNodeSelector:
  draxName: "main"

tolerations: []

affinity: {}
