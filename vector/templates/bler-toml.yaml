apiVersion: v1
kind: ConfigMap
metadata:
  name: bler-toml
data:
  bler.toml: |-
    [sources.inBler]
      bootstrap_servers = "{{ tpl .Values.config.kafka.hostname . }}:{{ .Values.config.kafka.port}}"
      group_id = "VECTOR_4G" 
      topics = ["{{ tpl .Values.config.kafka.topic . }}"] 
      type = "kafka" 

    [transforms.parseJsonBler]
      type = "json_parser" 
      inputs = ["inBler"] 
      drop_field = false # optional, default
      drop_invalid = true 
      field = "message" # optional, default

    [transforms.filterBler]
      # General
      type = "filter" 
      inputs = ["parseJsonBler"] 
      # Condition
      condition."type.eq" = "BLER_REPORT"

    [transforms.parseBler]
      inputs = ["filterBler"]
      type   = "json_parser"
      field  = "blerReport"
      drop_field = false # optional, default
      drop_invalid = true 

    [transforms.log_to_metric_bler]
      inputs = ["parseBler"]
      type = "log_to_metric"
 
      [[transforms.log_to_metric_bler.metrics]]
        type = "gauge"
        field = "dlBler"
        tags.cellId = "{{`{{cellId}}`}}" # optional
        tags.ueRicId = "{{`{{ueRicId}}`}}"

      [[transforms.log_to_metric_bler.metrics]]
        type = "gauge"
        field = "ulBler"
        tags.cellId = "{{`{{cellId}}`}}" # optional
        tags.ueRicId = "{{`{{ueRicId}}`}}"


    [sinks.outBler]
      # General
      bucket = "vector-bucket" 
      database = "{{ .Values.config.influx.database }}" 
      endpoint = "http://{{ tpl .Values.config.influx.hostname . }}:{{ .Values.config.influx.port}}/" 
      inputs = ["log_to_metric_bler"] 
      namespace = "{{ .Values.config.influx.namespace }}" 
      type = "{{ .Values.config.influx.type }}" 
      username = "{{ .Values.config.influx.username }}"
      password = "{{ .Values.config.influx.password }}"
