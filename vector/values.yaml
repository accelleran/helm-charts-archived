# Default values for vector.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

version: "{{ .Chart.AppVersion }}"

image:
  repository: accelleran/vector
  pullPolicy: IfNotPresent

initImage:
  repository: accelleran/acc-generic-img
  pullPolicy: IfNotPresent
  tag: "0.6.0"

imagePullSecrets:
  - name: accelleran-secret
nameOverride: ""
fullnameOverride: ""

initConfig:
  kafkaUrl: "kafka.{{ .Release.Namespace }}:9092"
  influxdbService: "influxdb-api.{{ .Release.Namespace }}:8086"
  kafkaTopicsCheck: "accelleran.drax.4g.ric.raw.messages,accelleran.drax.4g.ric.raw.service_discovery,accelleran.drax.4g.ric.raw.ue_measurements,accelleran.drax.5g.ric.raw.cu_state,accelleran.drax.5g.ric.raw.ue_measurements,accelleran.drax.5g.ric.raw.pm_counters,accelleran.drax.5g.ric.raw.messages"

config:
  kafka:
    hostname: "10.20.20.20"
    port: 31090
    topic: accelleran.drax.4g.ric.raw.ue_measurements
  influx:
    hostname: "10.20.20.20"
    port: 30303
    database: db_4G
    namespace: df
    type: influxdb_logs
    username: admin
    password: password

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  runAsUser: 0

service:
  enabled: false
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

draxNodeSelectorEnabled: "false"

draxNodeSelector:
  draxName: "main"

tolerations: []

affinity: {}
