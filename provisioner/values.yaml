# Default values for provisioner.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

version: "{{ .Chart.AppVersion }}"
# version: v0.2.3

image:
  repository: accelleran/provisioner
  pullPolicy: Always

imagePullSecrets:
  - name: accelleran-secret
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: 
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  runAsUser: 0

service:
  enabled: true
  type: ClusterIP
  port: 16002
  name: provisioner
  protocol: TCP

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

persistence:
  accessModes:
    - ReadWriteMany
  enabled: true
  size: 1Gi
  storageClassName: acc-provisioner
  type: pvc
  hostPath: /opt/pods/

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

nginx:
  config:
    serverKeyName: prov-server-key
    serverCrtName: prov-server-crt
    clientCrtName: prov-client-crt
  service:
    nodePort: 31610
  provisionerUrl: "{{ .Release.Name }}-provisioner.{{ .Release.Namespace }}"
  provisionerPort: 16002
