apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "provisioner.fullname" . }}
  labels:
    {{- include "provisioner.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: {{ .Values.strategyType }}
  selector:
    matchLabels:
      {{- include "provisioner.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "provisioner.labels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "provisioner.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{ if .Values.accelleranLicense.enabled }}
          image: "{{ .Values.image.repository }}-license:{{ tpl .Values.version . }}"
          {{ else }}
          image: "{{ .Values.image.repository }}:{{ tpl .Values.version . }}"
          {{ end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: RUST_LOG
            value: {{ .Values.logLevel }}
          ports:
            - name: {{ .Values.service.name}}
              containerPort: {{ .Values.service.port }}
              protocol: {{ .Values.service.protocol }}
          volumeMounts:
            - name: provisioner-db
              mountPath: /cells.db
              subPath: provisioner-db/cells.db
            {{ if .Values.accelleranLicense.enabled }}
            - mountPath: "/etc/license/license.crt"
              subPath: "license.crt"
              name: accelleran-license
              readOnly: true
            {{ end }}
          # livenessProbe:
          #  httpGet:
          #    path: /
          #    port: {{ .Values.service.port }}
          #readinessProbe:
          #  httpGet:
          #    path: /
          #    port: {{ .Values.service.port }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if or (.Values.nodeSelector) (eq (tpl .Values.draxNodeSelectorEnabled .) "true") }}
      nodeSelector:
        {{ if .Values.nodeSelector }}
          {{- toYaml .Values.nodeSelector | nindent 8 }}
        {{ end }}
        {{ if eq (tpl .Values.draxNodeSelectorEnabled .) "true" }}
          {{- tpl (toYaml .Values.draxNodeSelector) $ | nindent 8 }}
        {{ end }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: provisioner-db
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ include "provisioner.fullname" . }}{{- end }}
          {{- end -}}
        {{ if .Values.accelleranLicense.enabled }}
        - name: accelleran-license
          secret:
            secretName: {{ .Values.accelleranLicense.licenseSecretName}}
        {{ end }}
